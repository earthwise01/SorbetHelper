# Flag Toggled Killbox
placements.entities.SorbetHelper/FlagToggledKillbox.tooltips.flag=The flag that needs to be set in order for the killbox to be activated.
placements.entities.SorbetHelper/FlagToggledKillbox.tooltips.inverted=When checked, the killbox will only be active when the associated flag is disabled rather than only when the associated flag is enabled.

# Kill Zone
placements.entities.SorbetHelper/KillZone.tooltips.flag=The flag that needs to be set in order for the kill zone to be activated, leaving this empty causes the kill zone to always be active.
placements.entities.SorbetHelper/KillZone.tooltips.inverted=When checked, the kill zone will only be active when the associated flag is disabled rather than only when the associated flag is enabled.
placements.entities.SorbetHelper/KillZone.tooltips.fastKill=When checked, the player will die instantly upon touching the kill zone rather than getting knocked back a bit first.

# Strawberry (With Node Based Return)
placements.entities.SorbetHelper/ReturnBerry.tooltips.winged=Determines whether the strawberry has wings and attempts to vertically rise offscreen when the player dashes.
placements.entities.SorbetHelper/ReturnBerry.tooltips.delay=The delay (in seconds) before the player is placed into a bubble after grabbing the strawberry. (Default = 0.3)
placements.entities.SorbetHelper/ReturnBerry.tooltips.checkpointID=Manually determine what checkpoint section strawberries are visually grouped up in, showing up on the start menu during gameplay and level select. Overrides Everest's automatic berry IDs. (Default= -1)
placements.entities.SorbetHelper/ReturnBerry.tooltips.order=Manually determine what order strawberries are visually placed in on the start menu during gameplay and level select. Overrides Everest's automatic berry IDs. (Default= -1)

# Dash Falling Block
placements.entities.SorbetHelper/DashFallingBlock.tooltips.climbFall=If the block should fall if the player climbs on its sides.\nDoes nothing unless Fall On Touch is enabled.
placements.entities.SorbetHelper/DashFallingBlock.tooltips.fallOnTouch=If the block should fall if it comes in contact with the player, even if they don't dash into it.
placements.entities.SorbetHelper/DashFallingBlock.names.fallOnStaticMover=Fall On Static Mover Interact
placements.entities.SorbetHelper/DashFallingBlock.tooltips.fallOnStaticMover=If the falling block can be activated by static movers (such as springs) attached to it.
placements.entities.SorbetHelper/DashFallingBlock.tooltips.depth=Determines what visual layer the block should be on (higher values mean farther behind in the scene, default value is -9000).
placements.entities.SorbetHelper/DashFallingBlock.tooltips.shakeSfx=The sound played by the block before it falls.
placements.entities.SorbetHelper/DashFallingBlock.tooltips.impactSfx=The sound played by the block either when it lands on the ground or is dashed into.
placements.entities.SorbetHelper/DashFallingBlock.tooltips.tiletype=Changes the visual appearance of the falling block.
placements.entities.SorbetHelper/DashFallingBlock.tooltips.allowWavedash=If it is possible to wavedash on top of the block.
placements.entities.SorbetHelper/DashFallingBlock.names.dashCornerCorrection=Easier Wallbounce
placements.entities.SorbetHelper/DashFallingBlock.tooltips.dashCornerCorrection=Makes wallbouncing off of the block less precise (by allowing it up to 4 pixels deep into the block horizontally, dashing from the bottom).
placements.entities.SorbetHelper/DashFallingBlock.tooltips.direction=The direction the falling block will fall.
placements.entities.SorbetHelper/DashFallingBlock.names.fallDashMode=Fall Towards Dash Direction
placements.entities.SorbetHelper/DashFallingBlock.tooltips.fallDashMode=Whether the direction the falling block will fall towards is determined by the direction it was dashed into from.\nOverrides the normal direction setting when enabled.

# crumble on flag block
placements.entities.SorbetHelper/CrumbleOnFlagBlock.tooltips.blendin=Blends the block in with the walls it touches, making it less apparent.
placements.entities.SorbetHelper/CrumbleOnFlagBlock.tooltips.tiletype=Determines the visual appearance of the block.
placements.entities.SorbetHelper/CrumbleOnFlagBlock.tooltips.inverted=When checked, the block will only be visible when the associated flag is disabled rather than only when the associated flag is enabled.
placements.entities.SorbetHelper/CrumbleOnFlagBlock.tooltips.flag=The flag that needs to be set in order for the block to break.
placements.entities.SorbetHelper/CrumbleOnFlagBlock.tooltips.showDebris=Determines whether the block spawns debris when it breaks.
placements.entities.SorbetHelper/CrumbleOnFlagBlock.tooltips.playAudio=Determines whether the block plays sound effects when breaking/appearing.
placements.entities.SorbetHelper/CrumbleOnFlagBlock.tooltips.depth=Determines what visual layer the block should be on (higher values mean farther behind in the scene, default value is -10010).

# resizable waterfall
placements.entities.SorbetHelper/BigWaterfall.tooltips.color=The color of the waterfall.
placements.entities.SorbetHelper/BigWaterfall.tooltips.ignoreSolids=When checked, the waterfall will ignore any solid objects in its way (e.g. foreground tiles). however, water can still block it.
placements.entities.SorbetHelper/BigWaterfall.tooltips.lines=Determines whether the waterfall will have any additional lines for detail, disabling this will make the waterfall appear closer in appearance to a vanilla small waterfall as opposed to a big waterfall.
placements.entities.SorbetHelper/BigWaterfall.tooltips.depth=Determines what visual layer the waterfall should be on (higher values mean farther behind in the scene, default value is -9999 for the normal placement or -49900 for the above foreground placement).

# custom/rainbow lightbeam
# tooltips for most of the rainbow related attributes stolen from MaddieHelpingHand
# https://github.com/maddie480/MaddieHelpingHand/blob/master/Loenn/lang/en_gb.lang#L532
placements.entities.SorbetHelper/CustomLightbeam.tooltips.flag=The flag that needs to be set in order for the lightbeam to be activated, leaving this empty causes the lightbeam to always be active.
placements.entities.SorbetHelper/CustomLightbeam.tooltips.inverted=When checked, the lightbeam will only be active when the associated flag is disabled rather than only when the associated flag is enabled.
placements.entities.SorbetHelper/CustomLightbeam.tooltips.flagFadeTime=The time (in seconds) the lightbeam takes to fade in or out according to the flag.
placements.entities.SorbetHelper/CustomLightbeam.tooltips.rotation=The rotation of the lightbeam.
placements.entities.SorbetHelper/CustomLightbeam.tooltips.depth=Determines what visual layer the lightbeam should be on (higher values mean farther behind in the scene, default value is -9998).\nDoes not affect the particles.
placements.entities.SorbetHelper/CustomLightbeam.tooltips.noParticles=Determines whether the lightbeam emits particles.
placements.entities.SorbetHelper/CustomLightbeam.tooltips.color=The color of the lightbeam.
placements.entities.SorbetHelper/CustomLightbeam.tooltips.rainbow=Determines whether the lightbeam is rainbow.
placements.entities.SorbetHelper/CustomLightbeam.tooltips.useCustomRainbowColors=When checked, overrides the normal rainbow colors (whether vanilla or from a rainbow spinner color controller) with custom ones specified by the lightbeam.\nChanging this requires clicking save changes and reopening this menu for the correct settings to appear.\n(Requires rainbow to be checked)
# ^^^ might still be able to write this in a cleaner way but this should be good enough at least?
placements.entities.SorbetHelper/CustomLightbeam.tooltips.colors=The colors the rainbow lightbeam will use, separated by commas.
placements.entities.SorbetHelper/CustomLightbeam.tooltips.gradientSize=The distance required to achieve a complete loop across all colors. Vanilla value is 280.
placements.entities.SorbetHelper/CustomLightbeam.tooltips.loopColors=Determines how the colors loop. For example, if 3 colors A, B and C are specified:\n- when unchecked, the colors will cycle in the following order: A > B > C > B > A\n- when checked, the colors will cycle in the following order: A > B > C > A > B > C
placements.entities.SorbetHelper/CustomLightbeam.tooltips.centerX=The horizontal position of the center of the gradient. Uses "world" coordinates. Vanilla value is 0.
placements.entities.SorbetHelper/CustomLightbeam.tooltips.centerY=The vertical position of the center of the gradient. Uses "world" coordinates. Vanilla value is 0.
placements.entities.SorbetHelper/CustomLightbeam.tooltips.gradientSpeed=Determines how fast the gradient scrolls, in pixels per second. You can use negative values to make it scroll in the opposite direction. Vanilla value is 50.
placements.entities.SorbetHelper/CustomLightbeam.tooltips.singleColor=Determines whether the rainbow lightbeam is the same color throughout or uses a gradient across all the beams of light.\n(Requires rainbow to be checked)
# ^^^ last bit sounds a bit off i think but i can't come up with anything better currently.
placements.entities.SorbetHelper/CustomLightbeam.tooltips.fadeWhenNear=Determines whether the lightbeam fades out when the player is close to it.
placements.entities.SorbetHelper/CustomLightbeam.tooltips.fadeOnTransition=Determines whether the lightbeam fades out during screen transitions.
placements.entities.SorbetHelper/CustomLightbeam.names.gradientSize=Rainbow Gradient Size
placements.entities.SorbetHelper/CustomLightbeam.names.gradientSpeed=Rainbow Gradient Speed
placements.entities.SorbetHelper/CustomLightbeam.names.colors=Rainbow Colors
placements.entities.SorbetHelper/CustomLightbeam.names.centerX=Rainbow Center X
placements.entities.SorbetHelper/CustomLightbeam.names.centerY=Rainbow Center Y
placements.entities.SorbetHelper/CustomLightbeam.names.loopColors=Loop Rainbow Colors
placements.entities.SorbetHelper/CustomLightbeam.names.singleColor=Uniform Rainbow Color
# ^^^ this might not be an accurate way of saying this but honestly at this point i've given up trying to find anything better.

# winged strawberry direction controller
placements.entities.SorbetHelper/WingedStrawberryDirectionController.tooltips.direction=The direction winged strawberries in the room will fly.
